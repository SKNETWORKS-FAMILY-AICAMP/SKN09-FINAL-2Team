# Generated by Django 5.2 on 2025-06-11 04:56

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="Chat",
            fields=[
                (
                    "chat_id",
                    models.AutoField(
                        db_column="CHAT_ID", primary_key=True, serialize=False
                    ),
                ),
                ("title", models.CharField(db_column="TITLE", max_length=100)),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, db_column="CREATED_AT"),
                ),
                (
                    "is_deleted",
                    models.BooleanField(db_column="IS_DELETED", default=False),
                ),
            ],
            options={
                "db_table": "chat",
            },
        ),
        migrations.CreateModel(
            name="ChatMessage",
            fields=[
                (
                    "msg_id",
                    models.AutoField(
                        db_column="MSG_ID", primary_key=True, serialize=False
                    ),
                ),
                ("sender", models.CharField(db_column="SENDER", max_length=20)),
                ("message", models.TextField(db_column="MESSAGE")),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, db_column="CREATED_AT"),
                ),
            ],
            options={
                "db_table": "chat_msg",
            },
        ),
        migrations.CreateModel(
            name="PreferType",
            fields=[
                (
                    "prefer_id",
                    models.AutoField(
                        db_column="PREFER_ID", primary_key=True, serialize=False
                    ),
                ),
                ("type", models.CharField(db_column="TYPE", max_length=20)),
                ("type_name", models.CharField(db_column="TYPE_NAME", max_length=100)),
            ],
            options={
                "db_table": "prefer_type",
            },
        ),
        migrations.CreateModel(
            name="Product",
            fields=[
                (
                    "product_id",
                    models.AutoField(
                        db_column="PRODUCT_ID", primary_key=True, serialize=False
                    ),
                ),
                (
                    "brand",
                    models.CharField(
                        db_column="BRAND", default="브랜드 없음", max_length=100
                    ),
                ),
                ("name", models.CharField(db_column="NAME", max_length=255)),
                (
                    "image_url",
                    models.CharField(
                        blank=True, db_column="IMAGE_URL", max_length=255, null=True
                    ),
                ),
                (
                    "price",
                    models.DecimalField(
                        db_column="PRICE", decimal_places=2, max_digits=10
                    ),
                ),
                (
                    "options",
                    models.CharField(
                        blank=True, db_column="OPTIONS", max_length=255, null=True
                    ),
                ),
                (
                    "description",
                    models.TextField(blank=True, db_column="DESCRIPTION", null=True),
                ),
                ("category", models.CharField(db_column="CATEGORY", max_length=50)),
                (
                    "sub_category",
                    models.CharField(
                        blank=True, db_column="SUB_CATEGORY", max_length=100, null=True
                    ),
                ),
                (
                    "product_url",
                    models.CharField(
                        blank=True, db_column="PRODUCT_URL", max_length=255, null=True
                    ),
                ),
                (
                    "is_recommended",
                    models.BooleanField(db_column="IS_RECOMMENDED", default=False),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, db_column="CREATED_AT"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True, db_column="UPDATED_AT", null=True
                    ),
                ),
            ],
            options={
                "db_table": "product",
            },
        ),
        migrations.CreateModel(
            name="User",
            fields=[
                (
                    "user_id",
                    models.CharField(
                        db_column="USER_ID",
                        editable=False,
                        max_length=32,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "email",
                    models.EmailField(db_column="EMAIL", max_length=255, unique=True),
                ),
                ("password", models.CharField(db_column="PASSWORD", max_length=255)),
                ("nickname", models.CharField(db_column="NICKNAME", max_length=30)),
                ("birth", models.CharField(db_column="BIRTH", max_length=8)),
                ("gender", models.CharField(db_column="GENDER", max_length=8)),
                (
                    "job",
                    models.CharField(
                        blank=True, db_column="JOB", max_length=50, null=True
                    ),
                ),
                (
                    "profile_image",
                    models.CharField(
                        blank=True, db_column="PROFILE_IMAGE", max_length=255, null=True
                    ),
                ),
                (
                    "type",
                    models.CharField(db_column="TYPE", default="guest", max_length=10),
                ),
                (
                    "social_provider",
                    models.CharField(
                        blank=True,
                        db_column="SOCIAL_PROVIDER",
                        max_length=10,
                        null=True,
                    ),
                ),
                (
                    "is_email_verified",
                    models.BooleanField(db_column="IS_EMAIL_VERIFIED", default=False),
                ),
                ("is_active", models.BooleanField(db_column="IS_ACTIVE", default=True)),
                ("is_staff", models.BooleanField(db_column="IS_STAFF", default=False)),
                ("is_superuser", models.BooleanField(default=False)),
                ("last_login", models.DateTimeField(blank=True, null=True)),
                (
                    "date_joined",
                    models.DateTimeField(
                        db_column="DATE_JOINED", default=django.utils.timezone.now
                    ),
                ),
                (
                    "reason",
                    models.CharField(
                        blank=True, db_column="REASON", max_length=255, null=True
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, db_column="CREATED_AT"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(blank=True, db_column="UPDATED_AT", null=True),
                ),
                (
                    "is_deleted",
                    models.BooleanField(db_column="IS_DELETED", default=False),
                ),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "db_table": "user",
            },
        ),
        migrations.CreateModel(
            name="Recipient",
            fields=[
                (
                    "chat_id",
                    models.OneToOneField(
                        db_column="CHAT_ID",
                        on_delete=django.db.models.deletion.CASCADE,
                        primary_key=True,
                        serialize=False,
                        to="app.chat",
                    ),
                ),
                ("gender", models.CharField(db_column="gender", max_length=8)),
                ("age_group", models.CharField(db_column="age_group", max_length=20)),
                (
                    "relation",
                    models.CharField(
                        blank=True, db_column="relation", max_length=20, null=True
                    ),
                ),
                (
                    "anniversary",
                    models.CharField(
                        blank=True, db_column="anniversary", max_length=50, null=True
                    ),
                ),
                (
                    "situation_info",
                    models.TextField(blank=True, db_column="situation_info", null=True),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, db_column="CREATED_AT"),
                ),
            ],
            options={
                "db_table": "recipient",
            },
        ),
        migrations.AddField(
            model_name="chat",
            name="user_id",
            field=models.ForeignKey(
                db_column="USER_ID",
                on_delete=django.db.models.deletion.CASCADE,
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.CreateModel(
            name="Feedback",
            fields=[
                (
                    "msg_id",
                    models.OneToOneField(
                        db_column="MSG_ID",
                        on_delete=django.db.models.deletion.CASCADE,
                        primary_key=True,
                        serialize=False,
                        to="app.chatmessage",
                    ),
                ),
                ("feedback", models.BooleanField(db_column="FEEDBACK")),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, db_column="CREATED_AT"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, db_column="UPDATED_AT"),
                ),
            ],
            options={
                "db_table": "feedback",
            },
        ),
        migrations.AddField(
            model_name="chatmessage",
            name="chat_id",
            field=models.ForeignKey(
                db_column="CHAT_ID",
                on_delete=django.db.models.deletion.CASCADE,
                to="app.chat",
            ),
        ),
        migrations.CreateModel(
            name="ChatRecommend",
            fields=[
                (
                    "rcmd_id",
                    models.AutoField(
                        db_column="RCMD_ID", primary_key=True, serialize=False
                    ),
                ),
                ("is_liked", models.BooleanField(db_column="IS_LIKED", default=False)),
                (
                    "reason",
                    models.CharField(
                        blank=True, db_column="REASON", max_length=255, null=True
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, db_column="CREATED_AT"),
                ),
                (
                    "chat_id",
                    models.ForeignKey(
                        db_column="CHAT_ID",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="app.chat",
                    ),
                ),
                (
                    "msg_id",
                    models.ForeignKey(
                        db_column="MSG_ID",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="app.chatmessage",
                    ),
                ),
                (
                    "product_id",
                    models.ForeignKey(
                        db_column="PRODUCT_ID",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="app.product",
                    ),
                ),
            ],
            options={
                "db_table": "chat_rcmd",
            },
        ),
        migrations.CreateModel(
            name="UserPrefer",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, db_column="CREATED_AT"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(blank=True, db_column="UPDATED_AT", null=True),
                ),
                (
                    "prefer_type",
                    models.ForeignKey(
                        db_column="PREFER_ID",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="user_preferences",
                        to="app.prefertype",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        db_column="USER_ID",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="preferences",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "user_prefer",
                "unique_together": {("user", "prefer_type")},
            },
        ),
    ]
